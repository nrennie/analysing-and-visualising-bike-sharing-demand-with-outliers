# Capital Bikeshare data {#sec-data}

The Capital Bikeshare data set spans a three year period, from January 1 2017 to December 31 2019. It describes every recorded trip by its  time of pick-up, time of drop-off, pick-up station location, and drop-off station location. The data set features only those 578 stations that recorded at least one pick-up or drop-off within the recorded time frame.

Out of a potential 334,084 unique origin-destination (O-D) pairs, the data set records 105,735 O-D pairs that customers completed based on pick-ups and drop-offs. As examples, the times of bike rentals for three different O-D pairs are shown in @fig-bookings_od_terminal(a), with each dot representing one journey. Note that station 31654 opened in November 2018, and so data is only available from that date onward for O-D pair 31203-31654.

```{r}
#| label: fig-bookings_od_terminal
#| fig-cap: Origin-destination (O-D) level data and aggregated daily usage patterns, with mean usage pattern indicated in (b). Figure adapted from @Rennie_thesis.
#| echo: false
#| message: false
#| eval: true
#| cache: true
d1 <- mutate(d1, count = 1)
d2 <- mutate(d2, count = 1)
d3 <- mutate(d3, count = 1)
p1 <- ggplot() +
  scale_y_continuous(
    name = "Origin-Destination", limits = c(0.5, 3.5), breaks = c(1, 2, 3),
    labels = c("31094-\n31924", "31203-\n31654", "31204-\n31002")
  ) +
  theme_light() +
  geom_segment(
    aes(
      x = as.POSIXct(strptime("2017-01-01 00:00:00", "%Y-%m-%d %H:%M")),
      xend = as.POSIXct(strptime("2019-12-31 23:59:59", "%Y-%m-%d %H:%M")),
      y = 1,
      yend = 1
    ),
    colour = "black", size = 0.2
  ) +
  geom_segment(
    aes(
      x = as.POSIXct(strptime("2018-11-14 00:00:00", "%Y-%m-%d %H:%M")),
      xend = as.POSIXct(strptime("2019-12-31 23:59:59", "%Y-%m-%d %H:%M")),
      y = 2,
      yend = 2
    ),
    colour = "black", linewidth = 0.2
  ) +
  geom_segment(
    aes(
      x = as.POSIXct(strptime("2017-01-01 00:00:00", "%Y-%m-%d %H:%M")),
      xend = as.POSIXct(strptime("2019-12-31 23:59:59", "%Y-%m-%d %H:%M")),
      y = 3,
      yend = 3
    ),
    colour = "black", size = 0.2
  ) +
  geom_point(data = d1, aes(x = as.POSIXct(strptime(Start.date, "%Y-%m-%d %H:%M")), y = count), colour = "black", pch = 19, size = 1.5) +
  geom_point(data = d2, aes(x = as.POSIXct(strptime(Start.date, "%Y-%m-%d %H:%M")), y = count + 1), colour = "black", pch = 19, size = 1.5) +
  geom_point(data = d3, aes(x = as.POSIXct(strptime(Start.date, "%Y-%m-%d %H:%M")), y = count + 2), colour = "black", pch = 19, size = 1.5) +
  labs(x = "", title = "", caption = "(a) Time-stamp data for three\norigin-destinations") +
  coord_cartesian(expand = F) +
  scale_x_continuous(breaks = c(as.POSIXct(strptime("2017-01-01 02:47:53", "%Y-%m-%d %H:%M")),
                                as.POSIXct(strptime("2018-01-01 02:47:53", "%Y-%m-%d %H:%M")), 
                                as.POSIXct(strptime("2019-01-01 02:47:53", "%Y-%m-%d %H:%M"))),
                     labels = c("2017", "2018", "2019"),
                     limits = c(as.POSIXct(strptime("2017-01-01 00:00:00", "%Y-%m-%d %H:%M")),
                                as.POSIXct(strptime("2020-01-01 23:59:59", "%Y-%m-%d %H:%M")))) +
  theme(
    axis.text = element_text(family = "serif", size = 9),
    axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
    axis.title = element_text(family = "serif", size = 9),
    legend.text = element_text(family = "serif", size = 9),
    plot.background = element_rect(fill = "transparent", color = NA),
    plot.margin = margin(0.1, 0.1, 0.1, 0.1, "cm"),
    legend.background = element_rect(color = NA, fill = "transparent"),
    legend.box.background = element_rect(fill = "transparent", color = NA),
    legend.position = "none", legend.justification = c(0, 1),
    legend.title = element_blank(),
    plot.caption = element_text(family = "serif", size = 10, hjust = 0.5),
    legend.key = element_blank(),
    panel.grid.major = element_blank(), panel.grid.minor = element_blank()
  )
d1_wide <- agg_station_matrix[[134]]
plot_data <- d1_wide %>% gather(hour_of_day, count, "0":"23")
plot_data$hour_of_day <- as.numeric(plot_data$hour_of_day)
hour_labels <- c(
  "00:00", "04:00",
  "08:00", "12:00",
  "16:00", "20:00"
)
p2 <- ggplot() +
  geom_line(
    data = plot_data, mapping = aes(x = hour_of_day, y = count, group = date_of_day),
    linewidth = 0.1, colour = alpha("grey", 0.3)
  ) +
  geom_line(aes(x = 0:23, y = colMeans(d1_wide[, 2:25])), colour = "black", linewidth = 0.8) +
  coord_cartesian(expand = F) +
  labs(caption = "(b) Daily usage patterns for\nstation 31203") +
  scale_y_continuous(name = "Number of bikes hired per hour", limits = c(0, 55)) +
  scale_x_continuous(name = "", breaks = seq(0, 20, 4), labels = hour_labels) +
  theme_light() +
  theme(
    axis.text = element_text(family = "serif", size = 9),
    axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
    axis.title.y = element_text(margin = margin(t = 0, r = 3, b = 0, l = 0)),
    axis.title = element_text(family = "serif", size = 9),
    legend.text = element_text(family = "serif", size = 9),
    plot.background = element_rect(fill = "transparent", color = NA),
    legend.background = element_rect(color = NA, fill = "transparent"),
    legend.box.background = element_rect(fill = "transparent", color = NA),
    legend.position = "none", legend.justification = c(0, 1),
    legend.title = element_blank(),
    plot.caption = element_text(family = "serif", size = 10, hjust = 0.5),
    legend.key = element_blank()
  )
p <- plot_grid(p1, p2, ncol = 2, nrow = 1, align = "vh", rel_widths = c(1, 1))
p
```

#### Data cleansing
If the first use of a station in the data set was not January 1^st^ 2017, we check historical data from 2016 for any usage to determine if the station was open. If there are no earlier bookings, we consider the station as newly opened from the time of its first recorded trip. Capital Bikeshare pre-process the data to remove trips that are made by staff for system maintenance and any trips with a journey time of less than 60 seconds (as these may be false starts).

#### Data aggregation
Given the large number of O-D pairs, very few journeys are recorded per unique pair on average. This makes it difficult to detect meaningful patterns, or any deviation from such a pattern, on the O-D level. When numbers are this small, noise dominates over any trend, as also pointed out in related research on forecasting slow-moving retail products [@Jha2015]. To alleviate the problem of small numbers, we aggregate trips as pick-up and drop-off events, considering usage per station rather than O-D pairs. To further reduce the problem of sparse observations, and to make observations comparable over time, we aggregate usage by hour of day [@Petropoulos2015. Specifically, we define the daily usage pattern to be a time series of the number of times per hour that a station is used, either pick-up or drop-off -- see @fig-bookings_od_terminal(b). When considering pick-ups and drop-offs separately, we differentiate the daily pick-up pattern and the daily drop-off pattern. 

```{r}
#| label: fig-usage_terminal
#| fig-cap: Mean annual usage per station with (a) indicating higher usage nearer the city centre, and (b) showing a histogram of number of stations under varying levels of usage, in intervals of 5,000. Figure adapted from @Rennie_thesis.
#| fig-height: 3
#| echo: false
#| message: false
#| warning: false
#| eval: true
#| cache: true
total_terminals <- lapply(agg_station_matrix, function(x) sum(x[, 2:25]))
total_terminals <- unlist(total_terminals) / 3
station_data$total_terminals <- total_terminals
station_data_sorted <- station_data[order(station_data$total_terminals), ]
p1 <- ggplot() +
  geom_polygon(
    data = state, aes(x = long, y = lat, group = group),
    fill = "white", color = "black"
  ) +
  guides(fill = "none") +
  coord_fixed(1.3, xlim = c(-77.4, -76.8), ylim = c(38.7, 39.15), expand = FALSE) +
  geom_point(
    data = station_data_sorted,
    mapping = aes(x = LONGITUDE, y = LATITUDE, colour = total_terminals),
    pch = 19, size = 0.4
  ) +
  scale_colour_gradient("",
    low = "#e5f5e0", high = "#00441b",
    limits = c(0, 135000), breaks = c(0, 135000),
    labels = c("0", "135,000")
  ) +
  labs(caption = "\n(a) Mean annual usage by\nstation", x = "", y = "") +
  theme(
    panel.background = element_rect(fill = "transparent"),
    plot.background = element_rect(fill = "transparent"),
    plot.title = element_blank(),
    plot.subtitle = element_blank(),
    plot.caption = element_text(family = "serif", size = 10, hjust = 0.5),
    legend.title = element_blank(),
    legend.text = element_text(size = 9, hjust = 0),
    legend.position = c(0.2, 0.2),
    axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
    axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
    legend.key.height = unit(0.4, "cm"),
    plot.margin = unit(c(0.2, 0.2, 0.2, 0.2), "cm"),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.x = element_blank(),
    axis.ticks.y = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
  )
df <- data.frame(
  x = factor(names(total_terminals),
    levels = names(total_terminals)
  ),
  y = total_terminals
)
p2 <- ggplot() +
  geom_histogram(
    data = df, mapping = aes(x = y),
    position = "identity", alpha = 0.5, color = "#74c476",
    fill = "#74c476", binwidth = 5000
  ) +
  coord_cartesian(expand = F) +
  ylim(0, 225) +
  scale_x_continuous(breaks = c(0, 50000, 100000),
                     labels = c("0", "50,000", "100,000")) +
  labs(
    x = "Mean annual usage",
    y = "Number of stations",
    caption = "(b) Histogram of mean annual\nusage of stations"
  ) +
  theme_light() +
  theme(
    axis.text.y = element_text(family = "serif", size = 9),
    axis.text.x = element_text(family = "serif", size = 9),
    axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
    axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
    axis.title = element_text(family = "serif", size = 9),
    legend.text = element_text(family = "serif", size = 9),
    plot.background = element_rect(fill = "transparent", color = NA),
    panel.background = element_rect(fill = "transparent", color = NA),
    legend.background = element_rect(color = NA, fill = "transparent"),
    legend.box.background = element_rect(fill = "transparent", color = NA),
    legend.position = "none", legend.justification = c(0, 1),
    legend.title = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    plot.margin = unit(c(0.2, 0.2, 0.2, 0.2), "cm"),
    plot.caption = element_text(family = "serif", size = 10, hjust = 0.5),
    legend.key = element_blank()
  )
p <- plot_grid(p1, p2, ncol = 2, nrow = 1, align = "v", axis = "b")
p
```

#### Exploratory analysis: Spatial variation.
The total usage varies greatly across stations, with those closer to the centre of Washington D.C. being more popular on average. @fig-usage_terminal(a) visualises this idea by indicating the mean annual usage per station across the region. The most popular stations observe more than 130,000 uses per year, whereas the least popular stations observe less than one on average. Over half of the stations (51%) recorded fewer than 5,000 pick-up or drop-off events per year. To indicate the distribution, @fig-usage_terminal(b) provides the mean annual usage per station in a histogram.

#### Exploratory analysis: Temporal variation.
In addition to daily usage patterns varying across space, there is also significant temporal variation. @fig-mean_var that there are significantly different mean usage patterns and inter-daily variance for different days, months, and, to some extent, years. Here, we define inter-daily variance as the daily variability in the usage at a station at a given hour of the day. We present results here for only a single station as these mean and variance patterns can vary across stations, though similar differences between, e.g. days are observed across most stations. This variation in patterns across stations motivates the functional regression model described in Section @sec-func_reg.

```{r}
#| label: fig-mean_var
#| fig-cap: Mean usage patterns and inter-daily variance for station 31203 by hour of day, which is a representative pattern as seen across the network. Figure originally included in @Rennie_thesis.
#| fig-height: 6
#| echo: false
#| message: false
#| warning: false
#| eval: true
#| cache: true
hour_labels <- c(
  "00:00", "", "", "", "", "", "", "",
  "08:00", "", "", "", "", "", "", "",
  "16:00", "", "", "", "", "", "", ""
)
d1_wide <- agg_station_matrix[[134]]
d1_wide$day <- weekdays(d1_wide$date_of_day, abbreviate = TRUE)
plot_data <- d1_wide %>% group_by(day)
plot_data <- plot_data %>% summarise_at(c(colnames(plot_data)[2:25]), mean, na.rm = TRUE)
plot_data <- plot_data[1:7, ]
long_data <- plot_data %>% gather(hour_of_day, count, "0":"23")
long_data$hour_of_day <- as.numeric(long_data$hour_of_day)
long_data$day <- factor(long_data$day, levels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"), labels = c("M", "Tu", "W", "Th", "F", "Sa", "Su"))
p1 <- ggplot() +
  geom_line(
    data = long_data,
    mapping = aes(x = hour_of_day, y = count, group = day, col = day),
    linewidth = 0.1
  ) +
  coord_cartesian(expand = F) +
  guides(colour = guide_legend(ncol = 2)) +
  labs(caption = "(a) Mean usage\npatterns by weekday") +
  scale_y_continuous(name = "Usage per hour", limits = c(0, 35)) +
  scale_x_continuous(name = "", breaks = 0:23, labels = hour_labels) +
  theme_light() +
  theme(
    axis.text = element_text(family = "serif", size = 9),
    axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
    axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)),
    axis.title = element_text(family = "serif", size = 9),
    legend.text = element_text(size = 8),
    plot.background = element_rect(fill = "transparent", color = NA),
    legend.background = element_rect(color = NA, fill = "transparent"),
    legend.box.background = element_rect(fill = "transparent", color = NA),
    legend.position = c(0.0, 1.05), legend.justification = c(0, 1),
    legend.box.margin = unit(c(0, 0, 0, 0), "cm"),
    panel.grid.minor = element_blank(),
    legend.title = element_blank(),
    legend.key.size = unit(0.4, "cm"),
    plot.caption = element_text(family = "serif", size = 10, hjust = 0.5),
    legend.key = element_blank()
  )
d1_wide <- agg_station_matrix[[134]]
d1_wide$mon <- months(d1_wide$date_of_day, abbreviate = TRUE)
plot_data <- d1_wide %>% group_by(mon)
plot_data <- plot_data %>% summarise_at(c(colnames(plot_data)[2:25]), mean, na.rm = TRUE)
plot_data <- plot_data[1:12, ]
long_data <- plot_data %>% gather(hour_of_day, count, "0":"23")
long_data$hour_of_day <- as.numeric(long_data$hour_of_day)
long_data$mon <- factor(long_data$mon,
  levels = c(
    "Jan", "Feb", "Mar", "Apr", "May", "Jun",
    "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
  ),
  labels = c(
    "Ja", "Fe", "Mr", "Ap", "My", "Jn",
    "Jl", "Au", "Se", "Oc", "Nv", "De"
  )
)
p2 <- ggplot() +
  geom_line(
    data = long_data,
    mapping = aes(x = hour_of_day, y = count, group = mon, col = mon),
    linewidth = 0.1
  ) +
  coord_cartesian(expand = F) +
  guides(colour = guide_legend(ncol = 2)) +
  labs(caption = "(b) Mean usage\npatterns by month") +
  scale_y_continuous(name = "Usage per hour", limits = c(0, 35)) +
  scale_x_continuous(name = "", breaks = 0:23, labels = hour_labels) +
  theme_light() +
  theme(
    axis.text = element_text(family = "serif", size = 9),
    axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
    axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)),
    axis.title = element_text(family = "serif", size = 9),
    legend.text = element_text(size = 8),
    plot.background = element_rect(fill = "transparent", color = NA),
    legend.background = element_rect(color = NA, fill = "transparent"),
    legend.box.background = element_rect(fill = "transparent", color = NA),
    legend.position = c(0.0, 1.05), legend.justification = c(0, 1),
    legend.box.margin = unit(c(0, 0, 0, 0), "cm"),
    panel.grid.minor = element_blank(),
    legend.title = element_blank(),
    legend.key.size = unit(0.4, "cm"),
    plot.caption = element_text(family = "serif", size = 10, hjust = 0.5),
    legend.key = element_blank()
  )
d1_wide <- agg_station_matrix[[134]]
d1_wide$year <- lubridate::year(d1_wide$date_of_day)
plot_data <- d1_wide %>% group_by(year)
plot_data <- plot_data %>% summarise_at(c(colnames(plot_data)[2:25]), mean, na.rm = TRUE)
plot_data <- plot_data[1:3, ]
long_data <- plot_data %>% gather(hour_of_day, count, "0":"23")
long_data$hour_of_day <- as.numeric(long_data$hour_of_day)
long_data$year <- factor(long_data$year)
p3 <- ggplot() +
  geom_line(
    data = long_data,
    mapping = aes(x = hour_of_day, y = count, group = year, col = year),
    linewidth = 0.1
  ) +
  coord_cartesian(expand = F) +
  labs(caption = "(c) Mean usage\npatterns by year") +
  scale_y_continuous(name = "Usage per hour", limits = c(0, 35)) +
  scale_x_continuous(name = "", breaks = 0:23, labels = hour_labels) +
  theme_light() +
  theme(
    axis.text = element_text(family = "serif", size = 9),
    axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
    axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)),
    axis.title = element_text(family = "serif", size = 9),
    legend.text = element_text(size = 8),
    plot.background = element_rect(fill = "transparent", color = NA),
    legend.background = element_rect(color = NA, fill = "transparent"),
    legend.box.background = element_rect(fill = "transparent", color = NA),
    legend.position = c(0.0, 1.05), legend.justification = c(0, 1),
    legend.box.margin = unit(c(0, 0, 0, 0), "cm"),
    panel.grid.minor = element_blank(),
    legend.title = element_blank(),
    legend.key.size = unit(0.4, "cm"),
    plot.caption = element_text(family = "serif", size = 10, hjust = 0.5),
    legend.key = element_blank()
  )
d1_wide <- agg_station_matrix[[134]]
d1_wide$day <- weekdays(d1_wide$date_of_day, abbreviate = TRUE)
plot_data <- d1_wide %>% group_by(day)
plot_data <- plot_data %>% summarise_at(c(colnames(plot_data)[2:25]), var, na.rm = TRUE)
plot_data <- plot_data[1:7, ]
long_data <- plot_data %>% gather(hour_of_day, count, "0":"23")
long_data$hour_of_day <- as.numeric(long_data$hour_of_day)
long_data$day <- factor(long_data$day, levels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"), labels = c("M", "Tu", "W", "Th", "F", "Sa", "Su"))
p4 <- ggplot() +
  geom_line(
    data = long_data,
    mapping = aes(x = hour_of_day, y = count, group = day, col = day),
    linewidth = 0.1
  ) +
  coord_cartesian(expand = F) +
  guides(colour = guide_legend(ncol = 2)) +
  labs(caption = "(d) Inter-daily variance\nby weekday") +
  scale_y_continuous(name = "Variance", limits = c(0, 120)) +
  scale_x_continuous(name = "", breaks = 0:23, labels = hour_labels) +
  theme_light() +
  theme(
    axis.text = element_text(family = "serif", size = 9),
    axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
    axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)),
    axis.title = element_text(family = "serif", size = 9),
    legend.text = element_text(size = 8),
    plot.background = element_rect(fill = "transparent", color = NA),
    legend.background = element_rect(color = NA, fill = "transparent"),
    legend.box.background = element_rect(fill = "transparent", color = NA),
    legend.position = c(0.0, 1.05), legend.justification = c(0, 1),
    legend.box.margin = unit(c(0, 0, 0, 0), "cm"),
    panel.grid.minor = element_blank(),
    legend.title = element_blank(),
    legend.key.size = unit(0.4, "cm"),
    plot.caption = element_text(family = "serif", size = 10, hjust = 0.5),
    legend.key = element_blank()
  )
d1_wide <- agg_station_matrix[[134]]
d1_wide$mon <- months(d1_wide$date_of_day, abbreviate = TRUE)
plot_data <- d1_wide %>% group_by(mon)
plot_data <- plot_data %>% summarise_at(c(colnames(plot_data)[2:25]), var, na.rm = TRUE)
plot_data <- plot_data[1:12, ]
long_data <- plot_data %>% gather(hour_of_day, count, "0":"23")
long_data$hour_of_day <- as.numeric(long_data$hour_of_day)
long_data$mon <- factor(long_data$mon,
  levels = c(
    "Jan", "Feb", "Mar", "Apr", "May", "Jun",
    "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
  ),
  labels = c(
    "Ja", "Fe", "Mr", "Ap", "My", "Jn",
    "Jl", "Au", "Se", "Oc", "Nv", "De"
  )
)
p5 <- ggplot() +
  geom_line(
    data = long_data,
    mapping = aes(x = hour_of_day, y = count, group = mon, col = mon),
    linewidth = 0.1
  ) +
  coord_cartesian(expand = F) +
  guides(colour = guide_legend(ncol = 2)) +
  labs(caption = "(e) Inter-daily variance\nby month") +
  scale_y_continuous(name = "Variance", limits = c(0, 120)) +
  scale_x_continuous(name = "", breaks = 0:23, labels = hour_labels) +
  theme_light() +
  theme(
    axis.text = element_text(family = "serif", size = 9),
    axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
    axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)),
    axis.title = element_text(family = "serif", size = 9),
    legend.text = element_text(size = 8),
    plot.background = element_rect(fill = "transparent", color = NA),
    legend.background = element_rect(color = NA, fill = "transparent"),
    legend.box.background = element_rect(fill = "transparent", color = NA),
    legend.position = c(0.0, 1.05), legend.justification = c(0, 1),
    legend.box.margin = unit(c(0, 0, 0, 0), "cm"),
    panel.grid.minor = element_blank(),
    legend.title = element_blank(),
    legend.key.size = unit(0.4, "cm"),
    plot.caption = element_text(family = "serif", size = 10, hjust = 0.5),
    legend.key = element_blank()
  )
d1_wide <- agg_station_matrix[[134]]
d1_wide$year <- lubridate::year(d1_wide$date_of_day)
plot_data <- d1_wide %>% group_by(year)
plot_data <- plot_data %>% summarise_at(c(colnames(plot_data)[2:25]), var, na.rm = TRUE)
plot_data <- plot_data[1:3, ]
long_data <- plot_data %>% gather(hour_of_day, count, "0":"23")
long_data$hour_of_day <- as.numeric(long_data$hour_of_day)
long_data$year <- factor(long_data$year)
p6 <- ggplot() +
  geom_line(
    data = long_data,
    mapping = aes(x = hour_of_day, y = count, group = year, col = year),
    linewidth = 0.1
  ) +
  coord_cartesian(expand = F) +
  labs(caption = "(f)  Inter-daily variance\nby year") +
  scale_y_continuous(name = "Variance", limits = c(0, 120)) +
  scale_x_continuous(name = "", breaks = 0:23, labels = hour_labels) +
  theme_light() +
  theme(
    axis.text = element_text(family = "serif", size = 9),
    axis.title.x = element_text(margin = margin(t = 5, r = 0, b = 0, l = 0)),
    axis.title.y = element_text(margin = margin(t = 0, r = 5, b = 0, l = 0)),
    axis.title = element_text(family = "serif", size = 9),
    legend.text = element_text(size = 8),
    plot.background = element_rect(fill = "transparent", color = NA),
    legend.background = element_rect(color = NA, fill = "transparent"),
    legend.box.background = element_rect(fill = "transparent", color = NA),
    legend.position = c(0.0, 1.05), legend.justification = c(0, 1),
    legend.box.margin = unit(c(0, 0, 0, 0), "cm"),
    panel.grid.minor = element_blank(),
    legend.title = element_blank(),
    legend.key.size = unit(0.4, "cm"),
    plot.caption = element_text(family = "serif", size = 10, hjust = 0.5),
    legend.key = element_blank()
  )
p <- plot_grid(p1, p2, p3, p4, p5, p6, ncol = 3, nrow = 2, align = "h", rel_widths = c(1, 1))
p
```
